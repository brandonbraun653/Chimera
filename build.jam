import lib/CommonTools/boost-build/features/chimera ;


# ====================================================
# Local Rules 
# ====================================================
local rule explicit_alias ( name : sources * : requirements * : default-build * : usage-requirements * )
    {
    alias $(name) : $(sources) : $(requirements) : $(default-build) : $(usage-requirements) ;
    explicit $(name) ;
    }

# ====================================================
# Local Resources 
# ====================================================
# ------------------------------------------
# Source/Include Directories 
# ------------------------------------------
local chimera_inc_dir = . ; # Expects the user to reference headers like <Chimera/some_file.hpp>
local chimera_mock_inc_dir = ./../ ;
local chimera_port_sim_inc_dir = Chimera/modules/sim ;
local chimera_src_dir = Chimera ;
local chimera_src_sim_dir = Chimera/modules/sim ;

# ------------------------------------------
# Source Files
# ------------------------------------------
local chimera_src_root = [ glob Chimera/*.cpp ] ;
local chimera_src_sim = [ glob $(chimera_src_sim_dir)/*.cpp ] ;
local chimera_src_modules_memory = Chimera/modules/memory/chimera_memory_device.cpp ;
local chimera_src_modules_freertos = [ glob Chimera/modules/freertos/*.cpp ] ;

local chimera_src = 
    $(chimera_src_root)
    $(chimera_src_modules_freertos)
    ;

# ====================================================
# Project Definition
# ====================================================
project Chimera : usage-requirements <include>$(chimera_inc_dir) ;

# ====================================================
# Public Targets
# ====================================================
# ------------------------------------------
# Includes all common Chimera headers
# -----------------------------------------
explicit_alias PUB : : : : <include>$(chimera_inc_dir) ;
explicit_alias PUB_MOCK : : : : <include>$(chimera_mock_inc_dir) ;
explicit_alias PUB_SIM : : : : <include>$(chimera_port_sim_inc_dir) ;

# ------------------------------------------
# Includes all common FreeRTOS headers
# -----------------------------------------
explicit_alias _RTOS : : : 
    :   <define>USING_FREERTOS
        <use>/FREERTOS//PUB
        <use>/PRJ//FREERTOS_CFG
    ;

# ------------------------------------------
# Thor Backend Driver without FreeRTOS
# ------------------------------------------
lib CORE
    :   $(chimera_src)
        /THOR//CORE

    :   <Chimera>enabled-Thor
        <FreeRTOS>disabled
        <link>static
        <include>$(chimera_inc_dir)

        <use>/THOR//PUB                         # Thor Headers
        <use>/THOR//CORE_PUB                    # Thor Target Headers
        <use>/PRJ//CHIMERA_PORT                 # chimeraPort.hpp
    ;

# ------------------------------------------
# Thor Backend Driver with FreeRTOS
# ------------------------------------------
lib CORE
    :   $(chimera_src_root)
        $(chimera_src_modules_memory)
        $(chimera_src_modules_freertos)
        /THOR//CORE
        /FREERTOS//CORE

    :   <Chimera>enabled
        <Chimera-backend>Thor
        <FreeRTOS>enabled
        <Thor>enabled
        <link>static
        <include>$(chimera_inc_dir)

        <use>_RTOS                              # Pull in FreeRTOS from the alias up above
        <use>/THOR//PUB                         # Thor Headers    
        <use>/THOR//CORE_PUB                    # Thor Target Headers
        <use>/PRJ//BOOST                        # All things boost
        <use>/PRJ//CHIMERA_PORT                 # chimeraPort.hpp
        <use>/PRJ//CHIMERA_DEFS                 # Missing #defines normally included in the backend driver
    ;

# ------------------------------------------
# Simulator Backend Driver without FreeRTOS
# ------------------------------------------
lib CORE
    :   $(chimera_src_root)
        $(chimera_src_modules_memory)

    :   <Chimera>enabled-Sim
        <FreeRTOS>disabled
        <link>static
        <include>$(chimera_inc_dir)
        <include>$(chimera_port_sim_inc_dir)    # chimeraPort.hpp
        <define>NOMINMAX
        <define>SIM

        <use>/PRJ//BOOST                        # All things boost
        <use>/PRJ//CHIMERA_DEFS                 # Missing #defines normally included in the backend driver
    ;

# ------------------------------------------
# Simulator Backend Driver with FreeRTOS
# ------------------------------------------
lib CORE
    :   $(chimera_src_root)
        $(chimera_src_sim)
        $(chimera_src_modules_memory)
        $(chimera_src_modules_freertos)

    :   <Chimera>enabled-Sim
        <FreeRTOS>enabled
        <link>static
        <include>$(chimera_inc_dir)
        <include>$(chimera_port_sim_inc_dir)    # chimeraPort.hpp
        <define>NOMINMAX
        <define>SIM

        <use>_RTOS                              # Pull in FreeRTOS from the alias up above
        <use>/PRJ//BOOST                        # All things boost
        <use>/PRJ//CHIMERA_DEFS                 # Missing #defines normally included in the backend driver
    ;

explicit CORE ;

explicit_alias CHIMERA_CORE : CORE ;
