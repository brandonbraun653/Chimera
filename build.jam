
rule explicit_alias ( name : sources * : requirements * : default-build * : usage-requirements * )
    {
    alias $(name) : $(sources) : $(requirements) : $(default-build) : $(usage-requirements) ;
    explicit $(name) ;
    }

# ------------------------------------------
# Source/Include Directories 
# ------------------------------------------
local chimera_inc_dir = . ; # Expects the user to reference headers like <Chimera/some_file.hpp>
local chimera_src_dir = Chimera ;

# ------------------------------------------
# Source Files
# ------------------------------------------
local chimera_src_root = [ glob Chimera/*.cpp ] ;
local chimera_src_modules_freertos = [ glob Chimera/modules/freertos/*.cpp ] ;

local chimera_src = 
    $(chimera_src_root)
    $(chimera_src_modules_freertos)
    ;


project Chimera : usage-requirements <include>$(chimera_inc_dir) ;

# ------------------------------------------
# Consumable Targets
# ------------------------------------------

# Pulls in the Chimera headers
explicit_alias PUB : : : : <include>$(chimera_inc_dir) ;

# Pulls in necessary FreeRTOS headers
explicit_alias RTOS : : : 
    :   <define>USING_FREERTOS
        <use>/FreeRTOS//PUB
        <use>/PRJ//FreeRTOS_CFG
    ;

# ------------------------------------------
# Chimera library that automatically links to the correct back end drivers
# ------------------------------------------
lib CORE : UnconfiguredChimera.c : <Chimera>disabled ;

lib CORE
    :   $(chimera_src)
        /THOR//CORE

    :   <Chimera>enabled
        <ChimeraBackend>Thor
        <link>static
        <include>$(chimera_inc_dir)

        <use>/THOR//PUB
        <use>/THOR//CORE_PUB
        <use>/PRJ//CHIMERA_PORT         # chimeraPort.hpp
    :   
    :   
    ;
explicit CORE ;

explicit_alias CHIMERA_CORE : CORE : : <Chimera>disabled ;
